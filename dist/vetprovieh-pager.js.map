{"version":3,"file":"vetprovieh-pager.js","sources":["../../vetprovieh-shared/dist/vetprovieh-shared.js","../lib/vetprovieh-pager.ts"],"sourcesContent":["/**\n * Helper to get and set Attributes on Objects\n */\nclass ObjectHelper {\n    /**\n       * Getting Value from JSON-Object\n       * @param {Indexable} object\n       * @param {string} key\n       * @return {any}\n       */\n    static get(object, key) {\n        try {\n            const attributes = key.split('.');\n            return this._iterateThrough(object, attributes);\n        }\n        catch (ex) {\n            return undefined;\n        }\n    }\n    /**\n       * Iterating Through Object\n       * @param {Indexable} obj\n       * @param {string[]} attributes\n       * @param {number} depth\n       * @return {any}\n       * @private\n       */\n    static _iterateThrough(obj, attributes, depth = 0) {\n        if (depth < 0)\n            return undefined;\n        while (attributes.length > depth) {\n            const attribute = attributes.shift();\n            if (!obj)\n                throw new Error('Unknown Key');\n            obj = obj[attribute];\n        }\n        return obj;\n    }\n    /**\n       * Setting value for Object\n       * @param {Indexable} object\n       * @param {string} key\n       * @param {any} value\n       */\n    static set(object, key, value) {\n        const attributes = key.split('.');\n        object = this._iterateThrough(object, attributes, 1);\n        const property = attributes[0];\n        object[property] = value;\n    }\n    /**\n       * Object to String\n       * @param {Object} obj\n       * @return {string}\n       */\n    static objectToStringDeep(obj) {\n        if (!obj)\n            return '';\n        return Object.keys(obj).map((k) => {\n            const value = obj[k];\n            if (typeof (value) == 'object') {\n                return ObjectHelper.objectToStringDeep(value);\n            }\n            else {\n                return value;\n            }\n        }).toString();\n    }\n}\n\n/**\n * Helpers for View\n */\nclass ViewHelper {\n    /**\n       * Mark text yellow inside an element.\n       * @param {Node} element\n       * @param {string} input\n       */\n    static markElement(element, input) {\n        if (input != '') {\n            element.childNodes.forEach((n) => {\n                const value = n.nodeValue || '';\n                if (n.nodeName === '#text' && value.indexOf(input) >= 0) {\n                    element.innerHTML = n['data']\n                        .split(input)\n                        .join('<mark>' + input + '</mark>');\n                }\n                else {\n                    ViewHelper.markElement(n, input);\n                }\n            });\n        }\n    }\n    /**\n       * Regex to fill keys in template\n       * @return {RegExp}\n       */\n    static get regexTemplate() {\n        return /{{([a-zA-Z0-9\\.]+)}}/;\n    }\n    /**\n       * Replacing Placeholders in template from the loaded element\n       * @param {HTMLElement} template\n       * @param {Indexable} e\n       */\n    static replacePlaceholders(template, e) {\n        let match = null;\n        while (match = template.innerHTML.match(ViewHelper.regexTemplate)) {\n            let value = ObjectHelper.get(e, match[1]);\n            value = value || '';\n            template.innerHTML = template.innerHTML.replace(match[0], value);\n        }\n    }\n}\n\n/**\n * Binding for Form Fields\n */\nclass VetproviehBinding {\n    /**\n     * Default Constructor needs object and a property to bind\n     * @param {any} target\n     * @param {target} property\n     */\n    constructor(target, property) {\n        this._targetObject = target;\n        this._targetProperty = property;\n        this._bindings = [];\n    }\n    /**\n     * Gets current property value\n     * @return {any}\n     */\n    get value() {\n        return ObjectHelper.get(this._targetObject, this._targetProperty);\n    }\n    /**\n     * Sets current property value\n     * @param {any} val\n     */\n    set value(val) {\n        if (val !== this.value) {\n            ObjectHelper.set(this._targetObject, this._targetProperty, val);\n            this._updateBindings(val);\n        }\n    }\n    /**\n     * Add Binding to HTML-Field\n     * @param {HTMLElement} element\n     * @param {string} attribute\n     * @param {string} event\n     * @return {VetproviehBinding}\n     */\n    addBinding(element, attribute, event) {\n        this._attachListenerToEvent(element, event, attribute);\n        this._addToBindings(element, attribute);\n        element[attribute] = this.value;\n        return this;\n    }\n    /**\n     * Insert into internal datastructure\n     * @param {HTMLElement} element\n     * @param {string} attribute\n     * @private\n     */\n    _addToBindings(element, attribute) {\n        this._bindings.push({\n            element: element,\n            attribute: attribute,\n        });\n    }\n    /**\n     * Attach EventListener\n     * @param {HTMLElement} element\n     * @param {string} event\n     * @param {string} attribute\n     * @private\n     */\n    _attachListenerToEvent(element, event, attribute) {\n        element.addEventListener(event, () => {\n            this.value = element[attribute];\n        });\n    }\n    /**\n     * Update all set Bindings\n     * @param {any} val\n     * @private\n     */\n    _updateBindings(val) {\n        this._bindings.forEach((binding) => {\n            binding.element[binding.attribute] = val;\n        });\n    }\n}\n\n/**\n * BaseClass for view Elements\n */\nclass VetproviehElement extends HTMLElement {\n    /**\n       * Callback Implementation\n       * @param {string} name\n       * @param {any} old\n       * @param {any} value\n       */\n    attributeChangedCallback(name, old, value) {\n        if (old !== value) {\n            this[name] = value;\n        }\n    }\n    /**\n     * Loading HTML-Element From ShadowRoot\n     * @param {string} id\n     * @return {HTMLElement | undefined}\n     */\n    getByIdFromShadowRoot(id) {\n        if (this.shadowRoot) {\n            return this.shadowRoot.getElementById(id);\n        }\n    }\n    /**\n       * Hide Or Show Element\n       * @param {string} id\n       * @param {boolean} show\n       */\n    updateVisibility(id, show) {\n        const search = this.getByIdFromShadowRoot(id);\n        if (search) {\n            if (!show) {\n                search.classList.add('is-hidden');\n            }\n            else {\n                search.classList.remove('is-hidden');\n            }\n        }\n    }\n    // -----------------\n    // CLASS METHODS\n    // -----------------\n    /**\n       * Getting Template\n       * @return {string}\n       */\n    static get template() {\n        return `<link href=\"/node_modules/bulma/css/bulma.min.css\" \n                  rel=\"stylesheet\" type=\"text/css\">`;\n    }\n}\n\nexport { ObjectHelper, VetproviehBinding, VetproviehElement, ViewHelper };\n//# sourceMappingURL=vetprovieh-shared.js.map\n","import {VetproviehElement} from '@tomuench/vetprovieh-shared';\n\n/**\n * Paging Class\n */\nexport class VetproviehPager extends VetproviehElement {\n    private _properties = {\n      page: 1,\n      maximum: 1,\n    };\n\n    /**\n     * Observed Attributes\n     * @return {Array<string>}\n     */\n    static get observedAttributes() {\n      return ['page', 'maximum'];\n    }\n\n    /**\n     * Template for Pager\n     * @return {string}\n     */\n    static get template() {\n      return super.template + `\n        <style>\n          :host {\n            display: block;\n          }\n        </style>\n        <nav class=\"pagination is-centered is-small\" role=\"navigation\" \n             aria-label=\"pagination\">\n          <ul id=\"pager\" class=\"pagination-list\">\n          </ul>\n        </nav>`;\n    }\n\n\n    /**\n     * Page Getter\n     * @property {number|null} page\n     */\n    get page() {\n      return this._properties.page;\n    }\n\n    /**\n     * Setting page\n     * @param {number} val\n     */\n    set page(val: number) {\n      if (typeof(val) === 'string') val = parseInt(val);\n      if (val !== this.page && val <= this.maximum && val > 0) {\n        this._properties.page = val;\n        this._updateRendering();\n      }\n    }\n\n\n    /**\n     * @property {number|null} maximum\n     */\n    get maximum() {\n      return this._properties.maximum;\n    }\n\n    /**\n     * Setting Maximum\n     * @param {number} val\n     */\n    set maximum(val: number) {\n      if (val !== this.maximum) {\n        this._properties.maximum = val;\n        this._updateRendering();\n      }\n    }\n\n    /**\n     * Render Pages for Pager\n     * @private\n     */\n    _renderPages() {\n      const pager = this.getByIdFromShadowRoot('pager') as HTMLElement;\n      pager.appendChild(this._renderPage(1));\n      this._addBlankPage(pager, this.page > 3);\n\n      for (let i = -1; i < 2; i++) {\n        const toDisplayPage = this.page + i;\n        if (toDisplayPage > 1 && toDisplayPage < this.maximum) {\n          pager.appendChild(this._renderPage(toDisplayPage));\n        }\n      }\n\n      this._addBlankPage(pager, this.page < this.maximum - 2);\n      if (this.maximum != 1) {\n        pager.appendChild(this._renderPage(this.maximum));\n      }\n    }\n\n    /**\n     * render Page placeholder\n     * @param {HTMLElement} pager\n     * @param {boolean} show\n     * @private\n     */\n    _addBlankPage(pager: HTMLElement, show: boolean) {\n      if (show) {\n        const li = document.createElement('li');\n        const span = document.createElement('span');\n        span.classList.add('pagination-ellipsis');\n        span.innerHTML = '&hellip;';\n        li.appendChild(span);\n        pager.appendChild(li);\n      }\n    }\n\n    /**\n     * Render Single page Button\n     * @param {number} page\n     * @return {HTMLLIElement} Element\n     * @private\n     */\n    _renderPage(page: number): HTMLLIElement {\n      const li = document.createElement('li');\n      const a = document.createElement('a');\n      a.classList.add('pagination-link');\n      if (page === this.page) {\n        a.classList.add('is-current');\n      }\n\n      a.onclick = (event) => this._pageClickedEvent(this, event);\n\n      a.title = 'Open Page #' + this.page;\n      const linkText = document.createTextNode(page.toString());\n      a.appendChild(linkText);\n      li.appendChild(a);\n\n      return li;\n    }\n\n    /**\n     * Page-Button has been clicked\n     * @param {VetproviehPager} pager\n     * @param {Event} event\n     * @private\n     */\n    _pageClickedEvent(pager: VetproviehPager, event: Event) {\n      pager.page = parseInt((event.target as HTMLLIElement).innerText);\n      pager.dispatchEvent(new Event('change'));\n    }\n\n    /**\n     * Connected Callback\n     */\n    connectedCallback() {\n      // Lazy creation of shadowRoot.\n      if (!this.shadowRoot) {\n        this.attachShadow({\n          mode: 'open',\n        }).innerHTML = VetproviehPager.template;\n      }\n      this._updateRendering();\n    }\n\n    /**\n     * @private\n     */\n    _updateRendering() {\n      if (this.shadowRoot) {\n        const pager = this.getByIdFromShadowRoot('pager') as HTMLElement;\n        pager.innerHTML = '';\n        this._renderPages();\n      }\n    }\n}\n\ncustomElements.define('vetprovieh-pager', VetproviehPager);\n"],"names":[],"mappings":"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"}